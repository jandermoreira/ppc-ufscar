%! Package = ppc-ufscar
%! Author = Jander Moreira (moreira.jander@gmail.com)
%! Date = 25/04/2025

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{ppc-ufscar}[2025/04/25 Classe para a edição de Projetos Pedagógicos de Curso]

\@ifclassloaded{report}{}{
    \PackageWarning{ppc-ufscar}{'ppc-ufscar' foi projetado para a classe 'report'}
    \PackageWarning{ppc-ufscar}{O uso em outras classes pode causar comportamento imprevisível ou indesejável}
}

\NewDocumentCommand{\PPCVersion}{}{0.1}

%
% Pacotes
\RequirePackage{etoolbox}
\RequirePackage{attrtoolbox}
\RequirePackage{titlesec}
\RequirePackage{xcolor}
\RequirePackage{array}
\RequirePackage{pgf}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% OPÇÕES
\ExplSyntaxOn

\keys_define:nn { configuracao } {
    capa .bool_set:N = \g_ppc_apresenta_capa_bool,
    capa .initial:n = true,
    dados~institucionais .bool_set:N = \g_ppc_apresenta_dados_institucionais_bool,
    dados~institucionais .initial:n = true,
    ficha~descritiva .bool_set:N = \g_ppc_apresenta_ficha_descritiva_bool,
    ficha~descritiva .initial:n = true,
}
\NewDocumentCommand{\PPCConfig}{ m }{
    \keys_set:nn { configuracao } { #1 }
}

\ExplSyntaxOff


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% SUPORTE GERAL
\ExplSyntaxOn

\msg_new:nnn { ppc-ufscar } { mensagem } { }

% ppc_erro:n: apresenta mensagem de erro
\cs_new:Npn \ppc_erro:n #1 {
    % #1: mensagem a ser colocada no log
    \msg_set:nnn { ppc-ufscar } { mensagem } { #1 }
    \msg_error:nn { ppc-ufscar } { mensagem }
}

% ppc_aviso:n: apresenta mensagem de erro
\cs_new:Npn \ppc_aviso:n #1 {
    % #1: mensagem a ser colocada no log
    \msg_set:nnn { ppc-ufscar } { mensagem } { #1 }
    \msg_warning:nn { ppc-ufscar } { mensagem }
}

% ppc_se_periodo_valido:nnTF: executa código se um valor estiver no intervalo
\cs_new:Npn \ppc_se_periodo_valido:nnT #1#2#3 {
    % #1: valor inteiro a ser verificado
    % #2: limite superior
    % #3: código se estiver 1 <= #1 <= #2
    \int_compare:nNnTF { #1 } { < } { 0 } {
        \ppc_erro:n { Período~fora~do~intervalo~válido~(1~a~#2). }
    } {
        \int_compare:nNnTF { #1 } { > } { #2 } {
            \ppc_erro:n { Período~fora~do~intervalo~válido~(1~a~#2). }
        } {
            #3
        }
    }
}
% \cs_generate_variant:nn \ppc_se_periodo_valido:nnT { ncT }

\ExplSyntaxOff


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% FICHA DESCRITIVA
%
%     * Lista AT `itens-ficha-descritiva`: contém todos os itens
%       definidos, exceto ano e local
%     * Para cada item são criados dois atributos AT usando a classe `curso`:
%         - <texto chave>: com a descrição
%         - <chave>: com o valor
%
%     Exemplo:
%         instituição = {Instituição de ensino}{Un. Fed. de S.Carlos}
%         `instituição` = "Un. Fed. de S.Carlos" (classe `curso`)
%         `texto instituição` = "Instituição de ensino" (classe `curso`)
%         `instituição` é adicionada à lista `itens-ficha-descritiva`

\ExplSyntaxOn

% PPCDefinaFichaDescritiva: descrição dos dados sobre o curso
% #1: lista com os atributos do curso
\cs_new:Npn \ppc_separe_texto_conteudo:n #1 {
    % #1: par {texto-do-item}{valor-do-item}
    \seq_set_split:Nnn \l_local_argumentos_seq { } { #1 }
    \seq_pop_left:NN \l_local_argumentos_seq \l_tmpa_tl
    \ATAttributeSetFrom[curso]{texto~\l_keys_key_str}{\l_tmpa_tl}
    \seq_pop_left:NN \l_local_argumentos_seq \l_tmpa_tl
    \ATAttributeSetFrom[curso]{\l_keys_key_str}{\l_tmpa_tl}
}
\keys_define:nn { ficha-descritiva }{
    ano .code:n = { \ppc_separe_texto_conteudo:n { #1 } },
    local .code:n = { \ppc_separe_texto_conteudo:n { #1 } },
    unknown .code:n = {
        \ppc_separe_texto_conteudo:n { #1 }
        \ATListAppendItemsFrom{itens-ficha-descritiva}{\l_keys_key_str}
    },
}

\ATListCreate{itens-ficha-descritiva}
\NewDocumentCommand{\PPCDefinaFichaDescritiva}{ > { \TrimSpaces } m }{
    \keys_set:nn { ficha-descritiva } { #1 }
}

\ExplSyntaxOff

% \ppc@VerifiqueAtributosObrigatorios: verifica se os atributos mínimos estão definidos
\ATListCreate{obrigatórios-curso}
\ATListAppendItems{obrigatórios-curso}{universidade, curso, centro, ano, local}
\NewDocumentCommand{\ppc@VerifiqueAtributosObrigatorios}{}{%
    \ATListForEach{obrigatórios-curso}{\Atributo}{%
        \ATAttributeIfExist{curso}{\Atributo}{}{%
            \PackageError{ppc-ufscar}{Atributo '\Atributo' é obrigatório}.%
        }%
    }%
}

% PPCInfo: retorna o valor de um atributo do curso
% #1: nome do atributo
\NewDocumentCommand{\PPCInfo}{ m }{%
    \ATAttributeGet[curso]{#1}%
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% DADOS INSTITUCIONAIS
%
%     * Lista AT `dados-institucionais`: contém os dados (`unidade`,
%       `cargo`, `pessoa`, `nova página`) com os dados indicados.
%
%     Não são criados atributos AT.

\ExplSyntaxOn

% PPCDefinaDadosInstitucionais: define como será a apresentação de
%   dados da instituição
% #1: lista de separada por vírgulas, na forma chave = valor
%
% As chaves podem ser:
%   unidade: Universidade, Centro, Instituto, NDE
%   cargo: Reitora, Coordenador, Secretária
%   pessoa: seu nome
%   nova página: insere uma quebra de página
\seq_new:N \l_local_argumentos_seq
\keys_define:nn { dados-institucionais } {
    unidade .code:n = {
        \ATListAppendItems{\l_local_current_list_tl}{\bigskip\textsc{\textbf{\large#1}}}
    },
    cargo .code:n = {
        \ATListAppendItems{\l_local_current_list_tl}{\medskip\textbf{\small#1}}
    },
    pessoa .code:n = {
        \ATListAppendItems{\l_local_current_list_tl}{#1}
    },
    nova~página .code:n = {
        \ATListAppendItems{\l_local_current_list_tl}{\clearpage}
    },
}
\cs_new:Npn \ppc_defina_contra_capa:n #1 {
    \tl_clear_new:N \l_local_current_list_tl
    \tl_set:Nn \l_local_current_list_tl { dados-institucionais }
    \keys_set:nn { dados-institucionais } { #1 }
}
\NewDocumentCommand{\PPCDefinaDadosInstitucionais}{ > { \TrimSpaces } m }{
    \ATListCreate{dados-institucionais}
    \ppc_defina_contra_capa:n { #1 }
}
\ExplSyntaxOff


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% DESCRIÇÃO DAS DISCIPLINAS
%     Para cada disciplina são criados atributos AT para cada item.
%     O id da disciplina é usado como classe (e.g. `cap`, `md`).
%
%     Exemplo para a disciplina `cap`:
%         nome = {Construção de algoritmos e programação}
%         `nome` = "Construção de algoritmos e programação" (classe `cap`)
%
%     Não são criadas listas de disciplinas.

% PPCDefinaDisciplina: define uma disciplina
% #1: nome de referência ("apelido"); e.g. es1 para Engenharia de Software 1
% #2: lista separada por vírgulas com atributos e seus valores (atributo = {valor})
\NewDocumentCommand{\PPCDefinaDisciplina}{ m >{ \TrimSpaces } m }{%
    \ATClassSet{#1}{#2}%
}

% PPCDisciplina: expande para o valor de um dado atributo de uma disciplina
% #1: nome de referência ("apelido"); e.g. es1 para Engenharia de Software 1
% #2: nome do atributo
\NewDocumentCommand{\PPCDisciplina}{ m m }{%
    \ATAttributeGet[#1]{#2}%
}

% PPCImporteDisciplinas: carrega arquivos com descrições de disciplinas
% buscando no diretório ./disciplinas
% #1: lista separada por vírgulas com os nomes dos arquivos (sem .tex)
\NewDocumentCommand{\PPCImporteDisciplinas}{ > { \TrimSpaces } m }{%
    \RenewDocumentCommand{\do}{ m }{\input{##1}}%
    \docsvlist{#1}%
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% SUPORTE PARA CARGA HORÁRIA

\ExplSyntaxOn

% ppc_defina_carga_horaria:n: cria (ou zera) um contador para carga horária
\cs_new:Npn \ppc_defina_carga_horaria:n #1 {
    % #1: nome do contador
    \int_zero_new:c { g_ppc_ \l_ppc_matriz_corrente_tl _carga_ #1 _int }
}

% ppc_some_carga_horaria:n: adiciona horas a um contador de carga horária
\cs_new:Npn \ppc_some_carga_horaria:nn #1#2 {
    % #1: nome do contador
    % #2: quantidade de horas
    \int_add:cn { g_ppc_ \l_ppc_matriz_corrente_tl _carga_ #1 _int } { #2 }
}

\cs_new:Npn \ppc_obtenha_carga_disciplina:Nn #1#2 {
    % hack: acesso direto à variável interna AT da disciplina
    \int_set:Nn #1 {
        \tl_use:c { g_at_ #2 _ horas~teóricas _tl } +
        \tl_use:c { g_at_ #2 _ horas~práticas _tl } +
        \tl_use:c { g_at_ #2 _ horas~extensionistas _tl } +
        \tl_use:c { g_at_ #2 _ horas~estágio _tl }
    }

}

% PPCCargaHoraria: retorna um dos contadores de carga horária
% #1: nome do contador
\NewDocumentCommand{\PPCCargaHoraria}{ O {matriz-principal} m }{
    \int_use:c { g_ppc_ #1 _carga_ #2 _int }
}

\ExplSyntaxOff


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% MATRIZ CURRICULAR
%
%     * Cada matriz define:
%         - Variável `{ g_ppc_ <nome da matriz> _numero_periodos_int }`
%             com o número de períodos
%         - Variável `{ g_ppc_ <nome da matriz> _nome_periodo_tl }` com
%             o nome do período (e.g. ano, semestre)
%         - Listas AT `<nome da matriz>-carga-optativas-<número do período>`
%             vazias a serem preenchidas com a carga horária de cada optativa
%             planejada
%         - Variáveis `{ g_ppc_ <nome da matriz> _carga_a_compensar_ <nº período> _int }`
%             com a carga de horas a compensar (subtrair) para cada período
%         - Lista AT `<nome da matriz>-periodo-<número do período>` vazia
%             a ser preenchida com a lista de disciplinas do período.
%         - Variáveis `{ g_ppc_ <nome da matriz> _carga_ <categoria horas> _int }`
%             para contadores de carga horária (total, por período)
%
%     Se <nome da matriz> é omitido na definição, `matriz-principal` é o
%     valor padrão.
%
%     * Cada área da matriz define:
%         - Atributo AT `nome` na classe `<nome da matriz>-<id da área>`
%           com o nome da área
%         - Listas AT `<nome da matriz>-periodo-<numero do período>`
%           preenchida com os ids das disciplinas de cada período
%         - Listas AT `<nome da matriz>-<id da área>-<numero do período>`
%           com os ids das disciplinas de cada período separada por área

\ExplSyntaxOn

% PPCDefinaMatrizCurricular: define o conteúdo da matriz curricular
% #1 (opcional): nome da matriz, caso haja mais que uma
% #2: lista separada com vírgulas com a descrição da matriz (chave = valor)
\keys_define:nn { matriz-curricular } {
    nome~período .code:n = {
        \tl_clear_new:c { g_ppc_ \l_ppc_matriz_corrente_tl _nome_periodo_tl }
        \tl_set:cn { g_ppc_ \l_ppc_matriz_corrente_tl _nome_periodo_tl } { #1 }
    },
    número~períodos .code:n = {
        \int_zero_new:c { g_ppc_ \l_ppc_matriz_corrente_tl _numero_periodos_int }
        \int_set:cn { g_ppc_ \l_ppc_matriz_corrente_tl _numero_periodos_int } { #1 }
        \ppc_defina_carga_horaria:n { total }
        \ppc_defina_carga_horaria:n { obrigatória }
        \ppc_defina_carga_horaria:n { optativa }
        \int_set:Nn \l_tmpa_int { 0 }  % contador
        \int_while_do:nNnn { \l_tmpa_int } { < } { #1 } {
            \int_add:Nn \l_tmpa_int { 1 }
            \ATListCreate{
                \l_ppc_matriz_corrente_tl -periodo- \int_use:N \l_tmpa_int
            }
            \ATListCreate{
                \l_ppc_matriz_corrente_tl -carga-optativas- \int_use:N \l_tmpa_int
            }
            \int_zero_new:c {
                g_ppc_ \l_ppc_matriz_corrente_tl _carga_a_compensar_ \int_use:N \l_tmpa_int _int
            }
            \ppc_defina_carga_horaria:n { total~\int_use:N \l_tmpa_int }
            \ppc_defina_carga_horaria:n { obrigatória~\int_use:N \l_tmpa_int }
            \ppc_defina_carga_horaria:n { optativa~\int_use:N \l_tmpa_int }
        }
    },
    área .code:n = {
        \ppc_defina_area_matriz:n { #1 }
    },
    carga~optativas .code:n = {
        \ppc_defina_carga_optativas:n { #1 }
    },
    eletivas .code:n = {
        \ppc_defina_disciplinas_eletivas:n { #1 }
    },
    carga~a~compensar .code:n = {
        \ppc_defina_carga_a_compensar:n { #1 }
    },
}
\cs_new:Npn \ppc_defina_matriz_curricular:nn #1#2 {
    \tl_clear_new:N \l_ppc_matriz_corrente_tl
    \tl_set:Nn \l_ppc_matriz_corrente_tl { #1 }
    \keys_set:nn { matriz-curricular } { #2 }
    \exp_args:Nne \ppc_some_carga_horaria:nn { total } {
        \int_use:c { g_ppc_ \l_ppc_matriz_corrente_tl _carga_obrigatória_int } +
        \int_use:c { g_ppc_ \l_ppc_matriz_corrente_tl _carga_optativa_int }
    }

}
\NewDocumentCommand{\PPCDefinaMatrizCurricular}{ O{matriz-principal} > { \TrimSpaces } m }{
    \ppc_defina_matriz_curricular:nn { #1 } { #2 }
}

% ppc_obtenha_id_disciplina:Nn: atribui o id da disciplina, removendo
%   o indicador * para as optativas
\cs_new:Npn \ppc_obtenha_id_disciplina:Nn #1#2 {
    \tl_clear_new:N \l_ppc_prefixo_tl
    \tl_set:Ne \l_ppc_prefixo_tl { \tl_head:n { #2 } }
    \tl_clear_new:N #1
    \str_if_eq:eeTF { \l_ppc_prefixo_tl } { * } {  % optativa
        \tl_set:Ne #1 { \tl_tail:n { #2 } }
    } {  % obrigatória}
        \tl_set:Ne #1 { #2 }
    }
}

% ppc_caso_carater:nnn: processa disciplina conforme seu caráter
% vazio = obrigatória; * = opcional
\cs_new:Npn \ppc_caso_carater:nnn #1#2#3 {
    % #1: id da disciplina com possível modificador
    % #2: ação se for obrigatória
    % #3: ação se for optativa (prefixo *)
    \tl_clear_new:N \l_ppc_prefixo_tl
    \tl_set:Ne \l_ppc_prefixo_tl { \tl_head:n { #1 } }
    \str_if_eq:eeTF { \l_ppc_prefixo_tl } { * } {  % optativa
        #3
    } {  % obrigatória}
        #2
    }
}

% % ppc_caso_carater:nnnnn: processa disciplina conforme seu caráter
% % vazio = obrigatória; * = opcional; : = estágio; @ = extensionista
% \cs_new:Npn \ppc_caso_carater:nnnn #1#2#3#4 {
%     % #1: id da disciplina com possível modificador
%     % #2: ação se for obrigatória
%     % #3: ação se for optativa (prefixo o:)
%     % #4: ação se for eletiva (prefixo e:)
%     %
%     % Define \l_ppc_disciplina_tl com o id da disciplina (sem prefixo)
%     \tl_clear_new:N \l_ppc_prefixo_tl
%     \tl_set:Ne \l_ppc_prefixo_tl { \tl_head:n { #1 } }
%     \tl_clear_new:N \l_ppc_dois_pontos_tl
%     \tl_set:Ne \l_ppc_dois_pontos_tl { \exp_args:Ne \tl_head:n { \tl_tail:n { #1 } } }
%     \tl_clear_new:N \l_ppc_disciplina_tl
%     \tl_set:Ne \l_ppc_disciplina_tl { \exp_args:Ne \tl_tail:n { \tl_tail:n { #1 } } }
%     \str_if_eq:eeTF { \l_ppc_dois_pontos_tl } { : } {
%         \str_if_eq:eeTF { \l_ppc_prefixo_tl } { o } { #3 } {
%             \str_if_eq:eeTF { \l_ppc_prefixo_tl } { e } { #4 } {
%                 \ppc_erro:n { Caráter~inválido:~'\tl_use:N \l_ppc_prefixo_tl'.~(#1). }
%             }
%         }
%     } {
%         \tl_set:Nn \l_ppc_disciplina_tl { #1 }
%         #2
%     }
% }

% ppc_defina_area_matriz:n: define uma área para a matriz curricular
\keys_define:nn { área-matriz } {
    nome .code:n = {
        \ATAttributeSet[\l_ppc_matriz_corrente_tl-\l_ppc_area_tl]{nome}{#1}
        \int_set:Nn \l_tmpa_int { 0 }  % contador
        \exp_args:NNc \int_set:Nn \l_tmpb_int { g_ppc_ \l_ppc_matriz_corrente_tl _numero_periodos_int } % número de períodos
        \int_while_do:nNnn { \l_tmpa_int } { < } { \l_tmpb_int } {
            \int_add:Nn \l_tmpa_int { 1 }
            \ATListCreate{
                \l_ppc_matriz_corrente_tl - \l_ppc_area_tl - \int_use:N \l_tmpa_int
            }
        }
    },
    unknown .code:n = {  % unknown: \l_keys_key_str é o período
        \ppc_defina_disciplinas_periodo:nn { \l_keys_key_str } { #1 }
    },
}
\cs_new:Npn \ppc_defina_area_matriz:n #1 {
    % #1: par {id-da-área}{descrição-da-área}
    \seq_set_split:Nnn \l_local_argumentos_seq { } { #1 }
    \tl_clear_new:N \l_ppc_area_tl
    \seq_pop_left:NN \l_local_argumentos_seq \l_ppc_area_tl
    \seq_pop_left:NN \l_local_argumentos_seq \l_tmpa_tl
    \exp_args:NnV \keys_set:nn { área-matriz } \l_tmpa_tl
}

% ppc_defina_disciplinas_periodo:nn: registra as disciplinas do período
\cs_generate_variant:Nn \seq_set_split:Nnn { cnn }
\cs_generate_variant:Nn \int_set:Nn { Ne }
\cs_generate_variant:Nn \tl_set:Nn { Ne }
\cs_new:Npn \ppc_defina_disciplinas_periodo:nn #1#2 {
    % #1: número do período
    % #2: lista separada por vírgulas de disciplinas do período
    \ppc_se_periodo_valido:nnT { #1 } {
        \int_use:c { g_ppc_ \l_ppc_matriz_corrente_tl _numero_periodos_int }
    } {  % construção da matriz curricular
        \seq_clear_new:N \l_ppc_lista_disciplinas_seq
        \seq_set_split:Nnn \l_ppc_lista_disciplinas_seq { , } { #2 }
        \int_zero_new:N \l_ppc_carga_da_disciplina_int
        % \ppc_defina_carga_horaria:n { obrigatória~#1 }
        \seq_map_inline:Nn \l_ppc_lista_disciplinas_seq {
            \ppc_obtenha_id_disciplina:Nn \l_ppc_disciplina_tl { ##1 }
            \ppc_obtenha_carga_disciplina:Nn \l_ppc_carga_da_disciplina_int { \l_ppc_disciplina_tl }
            \ppc_caso_carater:nnn { ##1 } {  % obrigatório
                \PPCDefinaDisciplina{\l_ppc_disciplina_tl}{caráter = Obrigatório}
                \ppc_some_carga_horaria:nn { obrigatória } { \int_use:N \l_ppc_carga_da_disciplina_int }
                \ppc_some_carga_horaria:nn { total~#1 } { \int_use:N \l_ppc_carga_da_disciplina_int }
                \ppc_some_carga_horaria:nn { obrigatória~#1 } { \int_use:N \l_ppc_carga_da_disciplina_int }
            } {  % optativo
                \PPCDefinaDisciplina{\l_ppc_disciplina_tl}{caráter = Optativo}
            }
            \ATListAppendItemsFrom{\l_ppc_matriz_corrente_tl-periodo-#1}{\l_ppc_disciplina_tl}
            \ATListAppendItemsFrom{\l_ppc_matriz_corrente_tl - \l_ppc_area_tl -#1}{\l_ppc_disciplina_tl}
        }
    }
}

% ppc_defina_optativas_periodo:nn: defina quais as cargas de optativas para
%   um período específico
\cs_new:Npn \ppc_defina_optativas_periodo:nn #1#2 {
    % #1: número do período
    % #2: lista separada por vírgulas de cargas horárias
    \ppc_se_periodo_valido:nnT { #1 } {
        \int_use:c { g_ppc_ \l_ppc_matriz_corrente_tl _numero_periodos_int }
    } {
        \ATListAppendItems{\l_ppc_matriz_corrente_tl -carga-optativas-#1}{#2}
        \seq_clear_new:N \l_lista_horas_seq
        \seq_set_split:Nnn \l_lista_horas_seq { , } { #2 }
        \seq_map_inline:Nn \l_lista_horas_seq {
            \ppc_some_carga_horaria:nn { optativa } { ##1 }
            \ppc_some_carga_horaria:nn { optativa~#1 } { ##1 }
        }
    }
}

% ppc_defina_carga_optativas:n: determina a carga e quantidade esperada
%   de optativas em cada período
\keys_define:nn { carga-optativas } {
    unknown .code:n = {  % unknown: \l_keys_key_str é o período
        \ppc_defina_optativas_periodo:nn { \l_keys_key_str } { #1 }
    },
}
\cs_new:Npn \ppc_defina_carga_optativas:n #1 {
    \keys_set:nn { carga-optativas } { #1 }
}

% ppc_defina_disciplinas_eletivas:n: cria lista com as disciplinas eletivas
\cs_new:Npn \ppc_defina_disciplinas_eletivas:n #1 {
    \ATListCreate{\l_ppc_matriz_corrente_tl -eletivas}
    \ATListAppendItems{\l_ppc_matriz_corrente_tl -eletivas}{#1}
    \ppc_defina_carga_horaria:n { eletiva }
    \seq_set_split:Nnn \l_ppc_lista_disciplinas_seq { , } { #1 }
    \int_zero_new:N \l_ppc_carga_da_disciplina_int
    \seq_map_inline:Nn \l_ppc_lista_disciplinas_seq {
        \ppc_obtenha_carga_disciplina:Nn \l_ppc_carga_da_disciplina_int { ##1 }
        \ppc_some_carga_horaria:nn { eletiva } { \int_use:N \l_ppc_carga_da_disciplina_int }
    }
}


% ppc_defina_carga_a_compensar_periodo:nn: defina quais as cargas de optativas para
%   um período específico
\cs_new:Npn \ppc_defina_carga_a_compensar_periodo:nn #1#2 {
    % #1: número do período
    % #2: valor de horas para compensar
    \ppc_se_periodo_valido:nnT { #1 } {
        \int_use:c { g_ppc_ \l_ppc_matriz_corrente_tl _numero_periodos_int }
    } {
        \int_set:cn {
            g_ppc_ \l_ppc_matriz_corrente_tl _carga_a_compensar_ #1 _int
        } { #2 }
    }
}

% ppc_defina_carga_a_compensar:n
\keys_define:nn { carga-a-compensar } {
    unknown .code:n = {  % unknown: \l_keys_key_str é o período
        \ppc_defina_carga_a_compensar_periodo:nn { \l_keys_key_str } { #1 }
    },
}
\cs_new:Npn \ppc_defina_carga_a_compensar:n #1 {
    \keys_set:nn { carga-a-compensar } { #1 }
}

\ExplSyntaxOff

% PPCArea: retorna o valor de um atributo de uma área
% #1 (opcional): nome da matriz
% #2: id da área
% #3: atributo
\NewDocumentCommand{\PPCArea}{ O {matriz-principal} m m }{%
    \ATAttributeGet[#1-#2]{#3}%
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% OUTROS AJUSTES

% Modifica a aparência de apresentação do título do capítulo
\titleformat{\chapter}{\normalfont\bfseries\Large}{\thechapter}{1em}{\Large}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% APRESENTAÇÃO DE INFORMAÇÕES

% PPCCapa: gera a página de capa
\NewDocumentCommand{\PPCCapa}{}{
    \pagestyle{empty}
    \begin{center}
        \large\textsc{\PPCInfo{instituição}}\par
        \textsc{\PPCInfo{centro}}\par
        \vfill
        \begin{minipage}{0.8\linewidth}
            \begin{center}
                \LARGE\textsc{\textbf{\PPCInfo{curso}}}
            \end{center}
        \end{minipage}\par
        \large\textbf{---~~Projeto Pedagógico de Curso~~---}\par
        \vfill
        \vspace*{10em}\PPCInfo{local}\par
        \PPCInfo{ano}
    \end{center}
    \clearpage
    \setcounter{page}{0}
}

% PPCDadosInstitucionais: gera a apresentação da instituição,
%   suas unidades e pessoas
\NewDocumentCommand{\PPCDadosInstitucionais}{}{
    \pagestyle{empty}
    \begingroup
    \singlespacing
    \begin{center}
        \ATListForEach{dados-institucionais}{\Item}{\Item\par}
    \end{center}
    \endgroup
    \clearpage
    \setcounter{page}{1}
    \ATListCreate{dados-institucionais}  % limpa para salvar memória
}

% PPCFichaDescritiva: apresenta a ficha descritiva
\NewDocumentCommand{\PPCFichaDescritiva}{}{
    \pagestyle{empty}
    \begingroup
    \begin{center}
        \large
        \textbf{Ficha Descritiva do Curso}
    \end{center}
    \vspace{3em}
    \begin{center}
        \ATListForEach{itens-ficha-descritiva}{\Item}{%
            \noindent
            \parbox[t]{0.4\linewidth}{%
                \raggedleft
                \ATAttributeIfExist[curso]{texto \Item}{
                    \textbf{\PPCInfo{texto \Item}:}%
                }{\textcolor{red}{\textbf{Texto não definido}}:}
            }%
            \hspace{0.02\linewidth}%
            \parbox[t]{0.5\linewidth}{\PPCInfo{\Item}}%
            \par
        }
    \end{center}
    \endgroup
    \clearpage
    \setcounter{page}{1}
    \ATListCreate{dados-institucionais}  % salva memória
}
\endinput


ODS?