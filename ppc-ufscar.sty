%! Package = ppc-ufscar
%! Author = Jander Moreira (moreira.jander@gmail.com)
%! Date = 25/04/2025

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{ppc-ufscar}[2025-10-10 Pacote para a edição de Projeto Pedagógico de Curso - PPC]

\NewDocumentCommand{\PPCVersion}{}{0.1}
\NewDocumentCommand{\PPCDate}{}{2025-10-10}

% Pacotes
\RequirePackage{etoolbox}
\RequirePackage{attrtoolbox}
\RequirePackage{xcolor}
\RequirePackage{pgf}
\RequirePackage[utf8]{inputenc}
\RequirePackage[T1]{fontenc}
\RequirePackage{url}
\RequirePackage{hyperref}
\Urlmuskip=0mu plus 1mu


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% OPÇÕES
\ExplSyntaxOn

\keys_define:nn { configuracao } {
    capa .bool_set:N = \ppc@MostraCapa,
    capa .initial:n = true,
    dados~institucionais .bool_set:N = \ppc@MostraDadosInstitucionais,
    dados~institucionais .initial:n = true,
    ficha~descritiva .bool_set:N = \ppc@MostraFichaDescritiva,
    ficha~descritiva .initial:n = true,
}
\NewDocumentCommand{\PPCConfig}{ m }{
    \keys_set:nn { configuracao } { #1 }
}

\ExplSyntaxOff


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% SUPORTE GERAL
\ExplSyntaxOn

\msg_new:nnn { ppc-ufscar } { mensagem } { }

% ppc_erro:n: apresenta mensagem de erro
\cs_new:Npn \ppc_erro:n #1 {
    % #1: mensagem a ser colocada no log
    \msg_set:nnn { ppc-ufscar } { mensagem } { #1 }
    \msg_error:nn { ppc-ufscar } { mensagem }
}

% ppc_aviso:n: apresenta mensagem de erro
\cs_new:Npn \ppc_aviso:n #1 {
    % #1: mensagem a ser colocada no log
    \msg_set:nnn { ppc-ufscar } { mensagem } { #1 }
    \msg_warning:nn { ppc-ufscar } { mensagem }
}

% ppc_se_periodo_valido:nnTF: executa código se um valor estiver no intervalo
\cs_new:Npn \ppc_se_periodo_valido:nnT #1#2#3 {
    % #1: valor inteiro a ser verificado
    % #2: limite superior
    % #3: código se estiver 1 <= #1 <= #2
    \int_compare:nNnTF { #1 } { < } { 0 } {
        \ppc_erro:n { Período~fora~do~intervalo~válido~(1~a~#2). }
    } {
        \int_compare:nNnTF { #1 } { > } { #2 } {
            \ppc_erro:n { Período~fora~do~intervalo~válido~(1~a~#2). }
        } {
            #3
        }
    }
}


\NewDocumentCommand{\PPCIf}{ m +m +m}{
    \bool_if:cTF { ppc@ #1  } { #2 } { #3 }
}


\NewDocumentCommand{\ppc@IntUse}{ m }{
    \int_use:N #1
}


\@ifclassloaded{report}{}{
    \ppc_aviso:n { ppc-ufscar~foi~projetado~para~a~classe~report. }
    \ppc_aviso:n { O~resultado~do~uso~em~outras~classes~pode~causar~comportamento~imprevisível~ou~indesejável. }
}

\ExplSyntaxOff

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% FICHA DESCRITIVA
%
%     * Lista AT `itens-ficha-descritiva`: contém todos os itens
%       definidos, exceto ano e local
%     * Para cada item são criados dois atributos AT usando a classe `curso`:
%         - <texto chave>: com a descrição
%         - <chave>: com o valor
%
%     Exemplo:
%         instituição = {Instituição de ensino}{Un. Fed. de S.Carlos}
%         `instituição` = "Un. Fed. de S.Carlos" (classe `curso`)
%         `texto instituição` = "Instituição de ensino" (classe `curso`)
%         `instituição` é adicionada à lista `itens-ficha-descritiva`

\ExplSyntaxOn


\cs_new:Npn \ppc_separe_texto_conteudo:NNn #1#2#3 {
    % #1: macro para colocar o texto
    % #2: macro para colocar o conteúdo
    % #3: par {texto-do-item}{valor-do-item}
    \seq_set_split:Nnn \l_local_argumentos_seq { } { #3 }
    \tl_clear_new:N #1
    \seq_pop_left:NN \l_local_argumentos_seq #1
    \tl_clear_new:N #2
    \seq_pop_left:NN \l_local_argumentos_seq #2
}


% PPCDefinaFichaDescritiva: descrição dos dados sobre o curso
% #1: lista com os atributos do curso
\cs_new:Npn \ppc_separe_texto_conteudo_curso:n #1 {
    % #1: par {texto-do-item}{valor-do-item}
    \seq_set_split:Nnn \l_local_argumentos_seq { } { #1 }
    \seq_pop_left:NN \l_local_argumentos_seq \l_tmpa_tl
    \ATAttributeSetFrom[curso]{texto~\l_keys_key_str}{\l_tmpa_tl}
    \seq_pop_left:NN \l_local_argumentos_seq \l_tmpa_tl
    \ATAttributeSetFrom[curso]{\l_keys_key_str}{\l_tmpa_tl}
}
\keys_define:nn { ficha-descritiva }{
    ano .code:n = { \ppc_separe_texto_conteudo_curso:n { #1 } },
    local .code:n = { \ppc_separe_texto_conteudo_curso:n { #1 } },
    unknown .code:n = {
        \ppc_separe_texto_conteudo_curso:n { #1 }
        \ATListAppendItemsFrom{itens-ficha-descritiva}{\l_keys_key_str}
    },
}

\ATListCreate{itens-ficha-descritiva}
\NewDocumentCommand{\PPCDefinaFichaDescritiva}{ > { \TrimSpaces } m }{
    \keys_set:nn { ficha-descritiva } { #1 }
}

\ExplSyntaxOff

% \ppc@VerifiqueAtributosObrigatorios: verifica se os atributos mínimos estão definidos
\ATListCreate{obrigatórios-curso}
\ATListAppendItems{obrigatórios-curso}{universidade, curso, centro, ano, local}
\NewDocumentCommand{\ppc@VerifiqueAtributosObrigatorios}{}{%
    \ATListForEach{obrigatórios-curso}{\Atributo}{%
        \ATAttributeIfExist{curso}{\Atributo}{}{%
            \PackageError{ppc-ufscar}{Atributo '\Atributo' é obrigatório}.%
        }%
    }%
}

% PPCInfo: retorna o valor de um atributo do curso
% #1: nome do atributo
\NewDocumentCommand{\PPCInfo}{ m }{%
    \ATAttributeGet[curso]{#1}%
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% DADOS INSTITUCIONAIS
%
%     * Lista AT `dados-institucionais`: contém os dados (`unidade`,
%       `cargo`, `pessoa`, `nova página`) com os dados indicados.
%
%     Não são criados atributos AT.

\ExplSyntaxOn

% PPCDefinaDadosInstitucionais: define como será a apresentação de
%   dados da instituição
% #1: lista de separada por vírgulas, na forma chave = valor
%
% As chaves podem ser:
%   unidade: Universidade, Centro, Instituto, NDE
%   cargo: Reitora, Coordenador, Secretária
%   pessoa: seu nome
%   nova página: insere uma quebra de página
\seq_new:N \l_local_argumentos_seq
\keys_define:nn { dados-institucionais } {
    unidade .code:n = {
        \ATListAppendItems{\l_local_current_list_tl}{\bigskip\textsc{\textbf{\large#1}}}
    },
    cargo .code:n = {
        \ATListAppendItems{\l_local_current_list_tl}{\medskip\textbf{\small#1}}
    },
    pessoa .code:n = {
        \ATListAppendItems{\l_local_current_list_tl}{#1}
    },
    nova~página .code:n = {
        \ATListAppendItems{\l_local_current_list_tl}{\clearpage}
    },
}
\cs_new:Npn \ppc_defina_contra_capa:n #1 {
    \tl_clear_new:N \l_local_current_list_tl
    \tl_set:Nn \l_local_current_list_tl { dados-institucionais }
    \keys_set:nn { dados-institucionais } { #1 }
}
\NewDocumentCommand{\PPCDefinaDadosInstitucionais}{ > { \TrimSpaces } m }{
    \ATListCreate{dados-institucionais}
    \ppc_defina_contra_capa:n { #1 }
}
\ExplSyntaxOff


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% DESCRIÇÃO DAS ATIVIDADES CURRICULARES
%     Para cada atividade são criados atributos AT para cada item.
%     O id da atividade é usado como classe (e.g. `cap`, `md`).
%
%     Exemplo para a atividade `cap`:
%         nome = {Construção de algoritmos e programação}
%         `nome` = "Construção de algoritmos e programação" (classe `cap`)
%
%     Não são criadas listas de atividades.

% PPCDefinaAtividade: define uma atividade
% #1: identificador da atividade; e.g. es1 para Engenharia de Software 1
% #2: lista separada por vírgulas com atributos e seus valores (atributo = {valor})
\NewDocumentCommand{\PPCDefinaAtividade}{ m >{ \TrimSpaces } m }{%
    \ATClassSet{#1}{#2}%
    \ATListCreate{#1-pré-requisitos}
    \ATAttributeGetTo[#1]{\ppc@local@Lista}{pré-requisitos}
    \ATListAppendItemsFrom{#1-pré-requisitos}{\ppc@local@Lista}
    \ppc@CalculeCargaAtividade{\ppc@local@Total}{#1}%
    \csedef{ppc@local@TotalHoras}{horas total = \ppc@local@Total}%
    \ATClassSetFrom{#1}{\ppc@local@TotalHoras}%
    \ATAttributeIfExist[#1]{nome abreviado}{
        \ATAttributeGetTo[#1]{\ppc@local@Nome}{nome abreviado}%
        \PackageWarning{xxx}{#1 já tem nome abreviado (\ppc@local@Nome)}
    }{%
        % \PackageWarning{xxx}{#1 não tem nome abreviado}
        \ATAttributeGetTo[#1]{\ppc@local@Nome}{nome}%
        \ATAttributeSetFrom[#1]{nome abreviado}{\ppc@local@Nome}
        % \PackageWarning{xxx}{Mudando nome abreviado de #1 para \ppc@local@Nome}
    }%
% todo: criar uma lista das atividades definidas (portanto, válidas)
}

% PPCAtividade: expande para o valor de um dado atributo de uma atividade
% #1: identificador da atividade; e.g. es1 para Engenharia de Software 1
% #2: nome do atributo
\NewDocumentCommand{\PPCAtividade}{ m m }{%
    \ATAttributeGet[#1]{#2}%
}

% PPCImporteAtividades: carrega arquivos com descrições de atividades
% buscando no diretório ./atividades-curriculares
% #1: lista separada por vírgulas com os nomes dos arquivos (sem .tex)
\NewDocumentCommand{\PPCImporteAtividades}{ > { \TrimSpaces } m }{%
    \RenewDocumentCommand{\do}{ m }{\input{./atividades-curriculares/##1}}%
    \docsvlist{#1}%
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% SUPORTE PARA CARGA HORÁRIA

\ExplSyntaxOn

% ppc_defina_carga_horaria:n: cria (ou zera) um contador para carga horária
\cs_new:Npn \ppc_defina_carga_horaria:n #1 {
    % #1: nome do contador
    \int_zero_new:c { g_ppc_ \l_ppc_matriz_corrente_tl _carga_ #1 _int }
}

% ppc_some_carga_horaria:n: adiciona horas a um contador de carga horária
\cs_new:Npn \ppc_some_carga_horaria:nn #1#2 {
    % #1: nome do contador
    % #2: quantidade de horas
    \int_add:cn { g_ppc_ \l_ppc_matriz_corrente_tl _carga_ #1 _int } { #2 }
}

% ppc@CalculeCargaAtividade: calcula e recupera a carga de uma atividade
% #1: macro para guardar o valor total
% #2: id da atividade
\cs_new:Npn \ppc_calcule_carga_atividade:Nn #1#2 {
    \int_set:Nn #1 {
        % hack: acesso direto à variável interna AT da atividade
        \tl_use:c { g_at_ #2 _ horas~teóricas _tl } +
        \tl_use:c { g_at_ #2 _ horas~práticas _tl } +
        \tl_use:c { g_at_ #2 _ horas~extensionistas _tl } +
        \tl_use:c { g_at_ #2 _ horas~estágio _tl }
    }
}
\NewDocumentCommand{\ppc@CalculeCargaAtividade}{ m m }{
    \ppc_calcule_carga_atividade:Nn \l_tmpa_int { #2 }
    \def#1{\int_use:N \l_tmpa_int}
}

% ppc@ObtenhaCargaAtividade: recupera a carga de uma atividade (já calculada
%   por \ppc@CalculeCargaAtividade
% #1: macro para guardar o valor total
% #2: id da atividade
\cs_new:Npn \ppc_obtenha_carga_atividade:Nn #1#2 {
    \int_zero_new:N #1
    \int_set:Nn #1 { \tl_use:c { g_at_ #2 _ horas~total _tl } }
}
\NewDocumentCommand{\ppc@ObtenhaCargaAtividade}{ m m }{
    \def#1{\tl_use:c { g_at_ #2 _ horas~total _tl }} % hack: acesso direto à variável interna AT da atividade
}


% PPCCargaHoraria: retorna um dos contadores de carga horária
% #1: (opcional) star: volta vazio se igual a zero
% #2: (opcional) nome da matriz
% #3: nome do contador
\NewDocumentCommand{\PPCCargaHoraria}{ s O {matriz-principal} m O{} }{
    \IfBooleanTF{#1}{
        \int_if_zero:nTF { \int_use:c { g_ppc_ #2 _carga_ #3 _int } } { } {
            \int_use:c { g_ppc_ #2 _carga_ #3 _int } #4
        }
    }{
        \int_use:c { g_ppc_ #2 _carga_ #3 _int } #4
    }
}

\ExplSyntaxOff


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% MATRIZ CURRICULAR
%
%     * Cada matriz define:
%         - Variável `{ g_ppc_ <nome da matriz> _numero_periodos_int }`
%             com o número de períodos
%         - Variável `{ g_ppc_ <nome da matriz> _nome_periodo_tl }` com
%             o nome do período (e.g. ano, semestre)
%         - Listas AT `<nome da matriz>-carga-optativas-<número do período>`
%             vazias a serem preenchidas com a carga horária de cada optativa
%             planejada
%         - Variáveis `{ g_ppc_ <nome da matriz> _carga_para_deduzir_ <nº período> _int }`
%             com a carga de horas a deduzir (subtrair) para cada período
%         - Lista AT `<nome da matriz>-periodo-<número do período>` vazia
%             a ser preenchida com a lista de atividades do período.
%         - Variáveis `{ g_ppc_ <nome da matriz> _carga_ <categoria horas> _int }`
%             para contadores de carga horária (total, por período)
%
%     Se <nome da matriz> é omitido na definição, `matriz-principal` é o
%     valor padrão.
%
%     * Cada área da matriz define:
%         - Atributo AT `nome` na classe `<nome da matriz>-<id da área>`
%           com o nome da área
%         - Listas AT `<nome da matriz>-periodo-<numero do período>`
%           preenchida com os ids das atividades de cada período
%         - Listas AT `<nome da matriz>-<id da área>-<numero do período>`
%           com os ids das atividades de cada período separada por área

\ExplSyntaxOn

% PPCDefinaMatrizCurricular: define o conteúdo da matriz curricular
% #1 (opcional): nome da matriz, caso haja mais que uma
% #2: lista separada com vírgulas com a descrição da matriz (chave = valor)
\keys_define:nn { matriz-curricular } {
    nome~período .code:n = {
        \tl_clear_new:c { g_ppc_ \l_ppc_matriz_corrente_tl _nome_periodo_tl }
        \tl_set:cn { g_ppc_ \l_ppc_matriz_corrente_tl _nome_periodo_tl } { #1 }
        \ATAttributeSet[\l_ppc_matriz_corrente_tl]{nome~período}{#1}
    },
    número~períodos .code:n = {
        \int_zero_new:c { g_ppc_ \l_ppc_matriz_corrente_tl _numero_periodos_int }
        \int_set:cn { g_ppc_ \l_ppc_matriz_corrente_tl _numero_periodos_int } { #1 }
        \ppc_defina_carga_horaria:n { total }
        \ppc_defina_carga_horaria:n { obrigatória }
        \ppc_defina_carga_horaria:n { optativa }
        \int_set:Nn \l_tmpa_int { 0 }  % contador
        \int_while_do:nNnn { \l_tmpa_int } { < } { #1 } {  % para cada período
            \int_add:Nn \l_tmpa_int { 1 }
            \ATListCreate{ \l_ppc_matriz_corrente_tl -atividades }
            \ATListCreate{
                \l_ppc_matriz_corrente_tl -periodo- \int_use:N \l_tmpa_int
            }
            \ATListCreate{
                \l_ppc_matriz_corrente_tl -carga-optativas- \int_use:N \l_tmpa_int
            }
            % \int_zero_new:c {
            %     g_ppc_ \l_ppc_matriz_corrente_tl _carga_para_deduzir_ \int_use:N \l_tmpa_int _int
            % }
            \ppc_defina_carga_horaria:n { total~\int_use:N \l_tmpa_int }
            \ppc_defina_carga_horaria:n { obrigatória~\int_use:N \l_tmpa_int }
            \ppc_defina_carga_horaria:n { optativa~\int_use:N \l_tmpa_int }
        }
    },
    área .code:n = {
        \ppc_defina_area_matriz:n { #1 }
    },
    carga~optativas .code:n = {
        \ppc_defina_carga_optativas:n { #1 }
    },
    eletivas .code:n = {
        \ppc_defina_atividades_eletivas:n { #1 }
    },
    % carga~para~deduzir .code:n = {
    %     \ppc_defina_carga_para_deduzir:n { #1 }
    % },
}
\cs_new:Npn \ppc_defina_matriz_curricular:nn #1#2 {
    \tl_clear_new:N \l_ppc_matriz_corrente_tl
    \tl_set:Nn \l_ppc_matriz_corrente_tl { #1 }
    \ATListCreate{\l_ppc_matriz_corrente_tl-áreas}
    \keys_set:nn { matriz-curricular } { #2 }
    \exp_args:Nne \ppc_some_carga_horaria:nn { total } {
        \int_use:c { g_ppc_ \l_ppc_matriz_corrente_tl _carga_obrigatória_int } +
        \int_use:c { g_ppc_ \l_ppc_matriz_corrente_tl _carga_optativa_int }
    }

}
\NewDocumentCommand{\PPCDefinaMatrizCurricular}{ O{matriz-principal} > { \TrimSpaces } m }{
    \ppc_defina_matriz_curricular:nn { #1 } { #2 }
}


% ppc_se_for_adicao_de_horas:nTF: verifica se é uma adição de horas (+360, por exemplo)
\cs_new:Npn \ppc_se_for_adicao_de_horas:nTF #1#2#3 {
    % #1: o falso id-atividade no formato +N
    % #2: código se for iniciado com +
    % #3: código se for atividade real
    \tl_clear_new:N \l_ppc_prefixo_tl
    \tl_set:Ne \l_ppc_prefixo_tl { \tl_head:n { #1 } }
    \str_if_eq:eeTF { \l_ppc_prefixo_tl } { + } {  % optativa
        \int_zero_new:N \l_ppc_quantidade_horas_int
        \int_set:Ne \l_ppc_quantidade_horas_int { \tl_tail:n { #1 } }
        #2
    } {
        #3
    }
}


% ppc_obtenha_id_atividade:Nn: atribui o id da atividade, removendo
%   o indicador * para as optativas
\cs_new:Npn \ppc_obtenha_id_atividade:Nn #1#2 {
    \tl_clear_new:N \l_ppc_prefixo_tl
    \tl_set:Ne \l_ppc_prefixo_tl { \tl_head:n { #2 } }
    \tl_clear_new:N #1
    \str_if_eq:eeTF { \l_ppc_prefixo_tl } { * } {  % optativa
        \tl_set:Ne #1 { \tl_tail:n { #2 } }
    } {  % obrigatória}
        \str_if_eq:eeTF { \l_ppc_prefixo_tl } { - } {  % não contabiliza
            \tl_set:Ne #1 { \tl_tail:n { #2 } }
        } {
            \tl_set:Ne #1 { #2 }
        }
    }
}

% ppc_caso_carater:nnn: processa atividade conforme seu caráter
% vazio = obrigatória; * = opcional; - = obrigatória sem contabilizar carga
\bool_new:N \l_pcc_contabiliza_carga_atividade_bool
\cs_new:Npn \ppc_caso_carater:nnn #1#2#3 {
    % #1: id da atividade com possível modificador
    % #2: ação se for obrigatória
    % #3: ação se for optativa (prefixo *)
    \tl_clear_new:N \l_ppc_prefixo_tl
    \tl_set:Ne \l_ppc_prefixo_tl { \tl_head:n { #1 } }
    \bool_set_true:N \l_pcc_contabiliza_carga_atividade_bool
    \str_if_eq:eeTF { \l_ppc_prefixo_tl } { - } {  % marca para não contabilizar
        \ppc_obtenha_id_atividade:Nn \l_ppc_id_atividade { #1 }
        \bool_set_false:N \l_pcc_contabiliza_carga_atividade_bool
    } { }
    \str_if_eq:eeTF { \l_ppc_prefixo_tl } { * } {  % optativa
        #3
    } {  % obrigatória}
        #2
    }
}

% % ppc_caso_carater:nnnnn: processa atividade conforme seu caráter
% % vazio = obrigatória; * = opcional; : = estágio; @ = extensionista
% \cs_new:Npn \ppc_caso_carater:nnnn #1#2#3#4 {
%     % #1: id da atividade com possível modificador
%     % #2: ação se for obrigatória
%     % #3: ação se for optativa (prefixo o:)
%     % #4: ação se for eletiva (prefixo e:)
%     %
%     % Define \l_ppc_atividade_tl com o id da atividade (sem prefixo)
%     \tl_clear_new:N \l_ppc_prefixo_tl
%     \tl_set:Ne \l_ppc_prefixo_tl { \tl_head:n { #1 } }
%     \tl_clear_new:N \l_ppc_dois_pontos_tl
%     \tl_set:Ne \l_ppc_dois_pontos_tl { \exp_args:Ne \tl_head:n { \tl_tail:n { #1 } } }
%     \tl_clear_new:N \l_ppc_atividade_tl
%     \tl_set:Ne \l_ppc_atividade_tl { \exp_args:Ne \tl_tail:n { \tl_tail:n { #1 } } }
%     \str_if_eq:eeTF { \l_ppc_dois_pontos_tl } { : } {
%         \str_if_eq:eeTF { \l_ppc_prefixo_tl } { o } { #3 } {
%             \str_if_eq:eeTF { \l_ppc_prefixo_tl } { e } { #4 } {
%                 \ppc_erro:n { Caráter~inválido:~'\tl_use:N \l_ppc_prefixo_tl'.~(#1). }
%             }
%         }
%     } {
%         \tl_set:Nn \l_ppc_atividade_tl { #1 }
%         #2
%     }
% }

% ppc_defina_area_matriz:n: define uma área para a matriz curricular
\keys_define:nn { área-matriz } {
    nome .code:n = {
        \ATAttributeSet[\l_ppc_matriz_corrente_tl-\l_ppc_area_tl]{nome}{#1}
        \int_set:Nn \l_tmpa_int { 0 }  % contador
        \exp_args:NNc \int_set:Nn \l_tmpb_int { g_ppc_ \l_ppc_matriz_corrente_tl _numero_periodos_int } % número de períodos
        \int_while_do:nNnn { \l_tmpa_int } { < } { \l_tmpb_int } {
            \int_add:Nn \l_tmpa_int { 1 }
            \ATListCreate{
                \l_ppc_matriz_corrente_tl - \l_ppc_area_tl - \int_use:N \l_tmpa_int
            }
        }
    },
    unknown .code:n = {  % unknown: \l_keys_key_str é o período
        \ppc_defina_atividades_periodo:nn { \l_keys_key_str } { #1 }
    },
}
\cs_new:Npn \ppc_defina_area_matriz:n #1 {
    % #1: par {id-da-área}{descrição-da-área}
    \seq_set_split:Nnn \l_local_argumentos_seq { } { #1 }
    \tl_clear_new:N \l_ppc_area_tl
    \seq_pop_left:NN \l_local_argumentos_seq \l_ppc_area_tl
    \ATListAppendItemsFrom{\l_ppc_matriz_corrente_tl-áreas}{\l_ppc_area_tl}
    \ATAttributeSet[\l_ppc_matriz_corrente_tl-periodo]{nome}{Atividades~Curriculares}
    \seq_pop_left:NN \l_local_argumentos_seq \l_tmpa_tl
    \exp_args:NnV \keys_set:nn { área-matriz } \l_tmpa_tl
}

% ppc_defina_atividades_periodo:nn: registra as atividades do período
\cs_generate_variant:Nn \seq_set_split:Nnn { cnn }
\cs_generate_variant:Nn \int_set:Nn { Ne }
\cs_generate_variant:Nn \tl_set:Nn { Ne }
\cs_new:Npn \ppc_defina_atividades_periodo:nn #1#2 {
    % #1: número do período
    % #2: lista separada por vírgulas de atividades do período
    \ppc_se_periodo_valido:nnT { #1 } { \int_use:c { g_ppc_ \l_ppc_matriz_corrente_tl _numero_periodos_int } } {
        \seq_clear_new:N \l_ppc_lista_atividades_seq
        \seq_set_split:Nnn \l_ppc_lista_atividades_seq { , } { #2 }
        \seq_map_inline:Nn \l_ppc_lista_atividades_seq {
            \ppc_se_for_adicao_de_horas:nTF { ##1 } {
                \ppc_some_carga_horaria:nn { obrigatória } { ##1 }
                \ppc_some_carga_horaria:nn { total~#1 } { ##1 }
                \ppc_some_carga_horaria:nn { obrigatória~#1 } { ##1 }
            }{
                \ppc_obtenha_id_atividade:Nn \l_ppc_atividade_tl { ##1 }
                \ppc_obtenha_carga_atividade:Nn \l_ppc_carga_da_atividade_int { \l_ppc_atividade_tl }
                \ppc_caso_carater:nnn { ##1 } {  % obrigatório
                    \PPCDefinaAtividade{\l_ppc_atividade_tl}{caráter = Obrigatório}
                    \bool_if:NTF \l_pcc_contabiliza_carga_atividade_bool {
                        \ppc_some_carga_horaria:nn { obrigatória } { \int_use:N \l_ppc_carga_da_atividade_int }
                        \ppc_some_carga_horaria:nn { total~#1 } { \int_use:N \l_ppc_carga_da_atividade_int }
                        \ppc_some_carga_horaria:nn { obrigatória~#1 } { \int_use:N \l_ppc_carga_da_atividade_int }
                    } { }
                } {  % optativo
                    \PPCDefinaAtividade{\l_ppc_atividade_tl}{caráter = Optativo}
                }
                \ATListAppendItemsFrom{\l_ppc_matriz_corrente_tl-atividades}{\l_ppc_atividade_tl}
                \ATListAppendItemsFrom{\l_ppc_matriz_corrente_tl-periodo-#1}{\l_ppc_atividade_tl}
                \ATListAppendItemsFrom{\l_ppc_matriz_corrente_tl - \l_ppc_area_tl -#1}{\l_ppc_atividade_tl}
            }
        }
    }
}

% ppc_defina_optativas_periodo:nn: defina quais as cargas de optativas para
%   um período específico
\cs_new:Npn \ppc_defina_optativas_periodo:nn #1#2 {
    % #1: número do período
    % #2: lista separada por vírgulas de cargas horárias
    \ppc_se_periodo_valido:nnT { #1 } {
        \int_use:c { g_ppc_ \l_ppc_matriz_corrente_tl _numero_periodos_int }
    } {
        \ATListAppendItems{\l_ppc_matriz_corrente_tl -carga-optativas-#1}{#2}
        \seq_clear_new:N \l_lista_horas_seq
        \seq_set_split:Nnn \l_lista_horas_seq { , } { #2 }
        \seq_map_inline:Nn \l_lista_horas_seq {
            \ppc_some_carga_horaria:nn { optativa } { ##1 }
            \ppc_some_carga_horaria:nn { optativa~#1 } { ##1 }
            \ppc_some_carga_horaria:nn { total~#1 } { ##1 }
        }
    }
}

% ppc_defina_carga_optativas:n: determina a carga e quantidade esperada
%   de optativas em cada período
\keys_define:nn { carga-optativas } {
    unknown .code:n = {  % unknown: \l_keys_key_str é o período
        \ppc_defina_optativas_periodo:nn { \l_keys_key_str } { #1 }
    },
}
\cs_new:Npn \ppc_defina_carga_optativas:n #1 {
    \keys_set:nn { carga-optativas } { #1 }
}

% ppc_defina_atividades_eletivas:n: cria lista com as atividades eletivas
\cs_new:Npn \ppc_defina_atividades_eletivas:n #1 {
    \ATListCreate{\l_ppc_matriz_corrente_tl -eletivas}
    \ATListAppendItems{\l_ppc_matriz_corrente_tl -eletivas}{#1}
    \ppc_defina_carga_horaria:n { eletiva }
    \seq_set_split:Nnn \l_ppc_lista_atividades_seq { , } { #1 }
    \int_zero_new:N \l_ppc_carga_da_atividade_int
    \seq_map_inline:Nn \l_ppc_lista_atividades_seq {
        \ppc_obtenha_carga_atividade:Nn \l_ppc_carga_da_atividade_int { ##1 }
        \ppc_some_carga_horaria:nn { eletiva } { \int_use:N \l_ppc_carga_da_atividade_int }
    }
}


% % ppc_defina_carga_para_deduzir_periodo:nn: define a quantidade de horas que deve
% %   ser subtraída do total por período
% \cs_new:Npn \ppc_defina_carga_para_deduzir_periodo:nn #1#2 {
%     % #1: número do período
%     % #2: valor de horas para deduzir
%     \ppc_se_periodo_valido:nnT { #1 } {
%         \int_use:c { g_ppc_ \l_ppc_matriz_corrente_tl _numero_periodos_int }
%     } {
%         \int_set:cn {
%             g_ppc_ \l_ppc_matriz_corrente_tl _carga_para_deduzir_ #1 _int
%         } { #2 }
%         \ppc_aviso:n { #1~+=~#2}
%     % \ppc_some_carga_horaria:nn { total } { -#2 }
%     % \ppc_some_carga_horaria:nn { total~#1 } { -#2 }
%     }
% }
%
% % ppc_defina_carga_para_deduzir:n
% \keys_define:nn { carga-a-deduzir } {
%     unknown .code:n = {  % unknown: \l_keys_key_str é o período
%         \ppc_defina_carga_para_deduzir_periodo:nn { \l_keys_key_str } { #1 }
%     },
% }
% \cs_new:Npn \ppc_defina_carga_para_deduzir:n #1 {
%     \keys_set:nn { carga-a-deduzir } { #1 }
% }

% PPCParaCadaPeriodo
% #1: (opcional) nome da matriz
% #2: macro com o número do período
% #3: código a ser executado
\cs_new:Npn \ppc_para_cada_periodo:nnn #1#2#3 {
    \int_set:Nn \l_tmpa_int { 0 }  % contador
    \exp_args:NNc \int_set:Nn \l_tmpb_int { g_ppc_ #1 _numero_periodos_int } % número de períodos
    \tl_clear_new:N #2
    \int_while_do:nNnn { \l_tmpa_int } { < } { \l_tmpb_int } {
        \int_add:Nn \l_tmpa_int { 1 }
        \tl_set:Nn #2 { \int_use:N \l_tmpa_int }
        #3
    }
}
\NewDocumentCommand{\PPCParaCadaPeriodo}{ O{matriz-principal} m +m }{
    \ppc_para_cada_periodo:nnn { #1 } { #2 } { #3 }
}

\ExplSyntaxOff

% PPCArea: retorna o valor de um atributo de uma área
% #1 (opcional): nome da matriz
% #2: id da área
% #3: atributo
\NewDocumentCommand{\PPCArea}{ O {matriz-principal} m m }{%
    \ATAttributeGet[#1-#2]{#3}%
}

\input{ppc-ufscar-apresentacao.code}
\input{ppc-ufscar-grafico.code.tex}
\input{ppc-ufscar-competencias.code.tex}
\input{ppc-ufscar-ods.code.tex}

\endinput
